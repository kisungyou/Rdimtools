// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppArmadillo.h>
#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// aux_preprocess
Rcpp::List aux_preprocess(arma::mat& X, const int flag);
RcppExport SEXP _Rdimtools_aux_preprocess(SEXP XSEXP, SEXP flagSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat& >::type X(XSEXP);
    Rcpp::traits::input_parameter< const int >::type flag(flagSEXP);
    rcpp_result_gen = Rcpp::wrap(aux_preprocess(X, flag));
    return rcpp_result_gen;
END_RCPP
}
// aux_perplexity
Rcpp::List aux_perplexity(arma::mat& X, double perplexity);
RcppExport SEXP _Rdimtools_aux_perplexity(SEXP XSEXP, SEXP perplexitySEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat& >::type X(XSEXP);
    Rcpp::traits::input_parameter< double >::type perplexity(perplexitySEXP);
    rcpp_result_gen = Rcpp::wrap(aux_perplexity(X, perplexity));
    return rcpp_result_gen;
END_RCPP
}
// aux_shortestpath
Rcpp::NumericMatrix aux_shortestpath(NumericMatrix& wmat);
RcppExport SEXP _Rdimtools_aux_shortestpath(SEXP wmatSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix& >::type wmat(wmatSEXP);
    rcpp_result_gen = Rcpp::wrap(aux_shortestpath(wmat));
    return rcpp_result_gen;
END_RCPP
}
// aux_landmarkMaxMin
int aux_landmarkMaxMin(arma::mat& pD, arma::vec& plandmark, arma::vec& seqnp);
RcppExport SEXP _Rdimtools_aux_landmarkMaxMin(SEXP pDSEXP, SEXP plandmarkSEXP, SEXP seqnpSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat& >::type pD(pDSEXP);
    Rcpp::traits::input_parameter< arma::vec& >::type plandmark(plandmarkSEXP);
    Rcpp::traits::input_parameter< arma::vec& >::type seqnp(seqnpSEXP);
    rcpp_result_gen = Rcpp::wrap(aux_landmarkMaxMin(pD, plandmark, seqnp));
    return rcpp_result_gen;
END_RCPP
}
// aux_kernelcov
Rcpp::List aux_kernelcov(arma::mat& tX, const int knumber, const double par1, const double par2);
RcppExport SEXP _Rdimtools_aux_kernelcov(SEXP tXSEXP, SEXP knumberSEXP, SEXP par1SEXP, SEXP par2SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat& >::type tX(tXSEXP);
    Rcpp::traits::input_parameter< const int >::type knumber(knumberSEXP);
    Rcpp::traits::input_parameter< const double >::type par1(par1SEXP);
    Rcpp::traits::input_parameter< const double >::type par2(par2SEXP);
    rcpp_result_gen = Rcpp::wrap(aux_kernelcov(tX, knumber, par1, par2));
    return rcpp_result_gen;
END_RCPP
}
// aux_eigendecomposition
Rcpp::List aux_eigendecomposition(arma::mat& X);
RcppExport SEXP _Rdimtools_aux_eigendecomposition(SEXP XSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat& >::type X(XSEXP);
    rcpp_result_gen = Rcpp::wrap(aux_eigendecomposition(X));
    return rcpp_result_gen;
END_RCPP
}
// aux_minmax
arma::mat aux_minmax(arma::mat& X, const double gap);
RcppExport SEXP _Rdimtools_aux_minmax(SEXP XSEXP, SEXP gapSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat& >::type X(XSEXP);
    Rcpp::traits::input_parameter< const double >::type gap(gapSEXP);
    rcpp_result_gen = Rcpp::wrap(aux_minmax(X, gap));
    return rcpp_result_gen;
END_RCPP
}
// aux_regout
arma::mat aux_regout(arma::mat& X, arma::rowvec tgt);
RcppExport SEXP _Rdimtools_aux_regout(SEXP XSEXP, SEXP tgtSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat& >::type X(XSEXP);
    Rcpp::traits::input_parameter< arma::rowvec >::type tgt(tgtSEXP);
    rcpp_result_gen = Rcpp::wrap(aux_regout(X, tgt));
    return rcpp_result_gen;
END_RCPP
}
// aux_scatter
arma::mat aux_scatter(arma::mat& X, arma::rowvec& mu);
RcppExport SEXP _Rdimtools_aux_scatter(SEXP XSEXP, SEXP muSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat& >::type X(XSEXP);
    Rcpp::traits::input_parameter< arma::rowvec& >::type mu(muSEXP);
    rcpp_result_gen = Rcpp::wrap(aux_scatter(X, mu));
    return rcpp_result_gen;
END_RCPP
}
// aux_scatter_pairwise
arma::mat aux_scatter_pairwise(arma::mat& X);
RcppExport SEXP _Rdimtools_aux_scatter_pairwise(SEXP XSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat& >::type X(XSEXP);
    rcpp_result_gen = Rcpp::wrap(aux_scatter_pairwise(X));
    return rcpp_result_gen;
END_RCPP
}
// aux_geigen
Rcpp::List aux_geigen(arma::mat& A, arma::mat& B);
RcppExport SEXP _Rdimtools_aux_geigen(SEXP ASEXP, SEXP BSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat& >::type A(ASEXP);
    Rcpp::traits::input_parameter< arma::mat& >::type B(BSEXP);
    rcpp_result_gen = Rcpp::wrap(aux_geigen(A, B));
    return rcpp_result_gen;
END_RCPP
}
// single_bicgstab
Rcpp::List single_bicgstab(const arma::mat& A, const arma::colvec& b, arma::colvec& xinit, const double reltol, const int maxiter, const arma::mat& M);
RcppExport SEXP _Rdimtools_single_bicgstab(SEXP ASEXP, SEXP bSEXP, SEXP xinitSEXP, SEXP reltolSEXP, SEXP maxiterSEXP, SEXP MSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const arma::mat& >::type A(ASEXP);
    Rcpp::traits::input_parameter< const arma::colvec& >::type b(bSEXP);
    Rcpp::traits::input_parameter< arma::colvec& >::type xinit(xinitSEXP);
    Rcpp::traits::input_parameter< const double >::type reltol(reltolSEXP);
    Rcpp::traits::input_parameter< const int >::type maxiter(maxiterSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type M(MSEXP);
    rcpp_result_gen = Rcpp::wrap(single_bicgstab(A, b, xinit, reltol, maxiter, M));
    return rcpp_result_gen;
END_RCPP
}
// single_bicgstab_sparse
Rcpp::List single_bicgstab_sparse(const arma::sp_mat A, const arma::sp_mat b, arma::colvec& xinit, const double reltol, const int maxiter, const arma::sp_mat M);
RcppExport SEXP _Rdimtools_single_bicgstab_sparse(SEXP ASEXP, SEXP bSEXP, SEXP xinitSEXP, SEXP reltolSEXP, SEXP maxiterSEXP, SEXP MSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const arma::sp_mat >::type A(ASEXP);
    Rcpp::traits::input_parameter< const arma::sp_mat >::type b(bSEXP);
    Rcpp::traits::input_parameter< arma::colvec& >::type xinit(xinitSEXP);
    Rcpp::traits::input_parameter< const double >::type reltol(reltolSEXP);
    Rcpp::traits::input_parameter< const int >::type maxiter(maxiterSEXP);
    Rcpp::traits::input_parameter< const arma::sp_mat >::type M(MSEXP);
    rcpp_result_gen = Rcpp::wrap(single_bicgstab_sparse(A, b, xinit, reltol, maxiter, M));
    return rcpp_result_gen;
END_RCPP
}
// aux_expm
arma::mat aux_expm(arma::mat& A);
RcppExport SEXP _Rdimtools_aux_expm(SEXP ASEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat& >::type A(ASEXP);
    rcpp_result_gen = Rcpp::wrap(aux_expm(A));
    return rcpp_result_gen;
END_RCPP
}
// aux_rank
int aux_rank(arma::mat& A);
RcppExport SEXP _Rdimtools_aux_rank(SEXP ASEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat& >::type A(ASEXP);
    rcpp_result_gen = Rcpp::wrap(aux_rank(A));
    return rcpp_result_gen;
END_RCPP
}
// methods_boxcount
arma::mat methods_boxcount(arma::mat& tX, arma::vec& Imin, double currentr);
RcppExport SEXP _Rdimtools_methods_boxcount(SEXP tXSEXP, SEXP IminSEXP, SEXP currentrSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat& >::type tX(tXSEXP);
    Rcpp::traits::input_parameter< arma::vec& >::type Imin(IminSEXP);
    Rcpp::traits::input_parameter< double >::type currentr(currentrSEXP);
    rcpp_result_gen = Rcpp::wrap(methods_boxcount(tX, Imin, currentr));
    return rcpp_result_gen;
END_RCPP
}
// aux_numderiv
arma::vec aux_numderiv(arma::vec& x, arma::vec& y);
RcppExport SEXP _Rdimtools_aux_numderiv(SEXP xSEXP, SEXP ySEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::vec& >::type x(xSEXP);
    Rcpp::traits::input_parameter< arma::vec& >::type y(ySEXP);
    rcpp_result_gen = Rcpp::wrap(aux_numderiv(x, y));
    return rcpp_result_gen;
END_RCPP
}
// handy_plus
arma::mat handy_plus(arma::mat& X);
RcppExport SEXP _Rdimtools_handy_plus(SEXP XSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat& >::type X(XSEXP);
    rcpp_result_gen = Rcpp::wrap(handy_plus(X));
    return rcpp_result_gen;
END_RCPP
}
// handy_hadamardABC
arma::mat handy_hadamardABC(arma::mat& A, arma::mat& B, arma::mat& C);
RcppExport SEXP _Rdimtools_handy_hadamardABC(SEXP ASEXP, SEXP BSEXP, SEXP CSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat& >::type A(ASEXP);
    Rcpp::traits::input_parameter< arma::mat& >::type B(BSEXP);
    Rcpp::traits::input_parameter< arma::mat& >::type C(CSEXP);
    rcpp_result_gen = Rcpp::wrap(handy_hadamardABC(A, B, C));
    return rcpp_result_gen;
END_RCPP
}
// handy_hadamardABCsqrt
arma::mat handy_hadamardABCsqrt(arma::mat& A, arma::mat& B, arma::mat& C);
RcppExport SEXP _Rdimtools_handy_hadamardABCsqrt(SEXP ASEXP, SEXP BSEXP, SEXP CSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat& >::type A(ASEXP);
    Rcpp::traits::input_parameter< arma::mat& >::type B(BSEXP);
    Rcpp::traits::input_parameter< arma::mat& >::type C(CSEXP);
    rcpp_result_gen = Rcpp::wrap(handy_hadamardABCsqrt(A, B, C));
    return rcpp_result_gen;
END_RCPP
}
// method_pca
Rcpp::List method_pca(arma::mat& psdX);
RcppExport SEXP _Rdimtools_method_pca(SEXP psdXSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat& >::type psdX(psdXSEXP);
    rcpp_result_gen = Rcpp::wrap(method_pca(psdX));
    return rcpp_result_gen;
END_RCPP
}
// method_mds
Rcpp::List method_mds(arma::mat& centerX);
RcppExport SEXP _Rdimtools_method_mds(SEXP centerXSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat& >::type centerX(centerXSEXP);
    rcpp_result_gen = Rcpp::wrap(method_mds(centerX));
    return rcpp_result_gen;
END_RCPP
}
// method_mdsD
Rcpp::List method_mdsD(arma::mat& D);
RcppExport SEXP _Rdimtools_method_mdsD(SEXP DSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat& >::type D(DSEXP);
    rcpp_result_gen = Rcpp::wrap(method_mdsD(D));
    return rcpp_result_gen;
END_RCPP
}
// method_ica
Rcpp::List method_ica(arma::mat& X, const int C, const int maxiter, const double tol, const int tnum, const double tpar, bool sym);
RcppExport SEXP _Rdimtools_method_ica(SEXP XSEXP, SEXP CSEXP, SEXP maxiterSEXP, SEXP tolSEXP, SEXP tnumSEXP, SEXP tparSEXP, SEXP symSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat& >::type X(XSEXP);
    Rcpp::traits::input_parameter< const int >::type C(CSEXP);
    Rcpp::traits::input_parameter< const int >::type maxiter(maxiterSEXP);
    Rcpp::traits::input_parameter< const double >::type tol(tolSEXP);
    Rcpp::traits::input_parameter< const int >::type tnum(tnumSEXP);
    Rcpp::traits::input_parameter< const double >::type tpar(tparSEXP);
    Rcpp::traits::input_parameter< bool >::type sym(symSEXP);
    rcpp_result_gen = Rcpp::wrap(method_ica(X, C, maxiter, tol, tnum, tpar, sym));
    return rcpp_result_gen;
END_RCPP
}
// method_rpgauss
Rcpp::List method_rpgauss(arma::mat& X, const int k);
RcppExport SEXP _Rdimtools_method_rpgauss(SEXP XSEXP, SEXP kSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat& >::type X(XSEXP);
    Rcpp::traits::input_parameter< const int >::type k(kSEXP);
    rcpp_result_gen = Rcpp::wrap(method_rpgauss(X, k));
    return rcpp_result_gen;
END_RCPP
}
// method_fa
Rcpp::List method_fa(arma::mat& X, const int k, const int maxiter, const double tolerance);
RcppExport SEXP _Rdimtools_method_fa(SEXP XSEXP, SEXP kSEXP, SEXP maxiterSEXP, SEXP toleranceSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat& >::type X(XSEXP);
    Rcpp::traits::input_parameter< const int >::type k(kSEXP);
    Rcpp::traits::input_parameter< const int >::type maxiter(maxiterSEXP);
    Rcpp::traits::input_parameter< const double >::type tolerance(toleranceSEXP);
    rcpp_result_gen = Rcpp::wrap(method_fa(X, k, maxiter, tolerance));
    return rcpp_result_gen;
END_RCPP
}
// method_npe
Rcpp::List method_npe(arma::mat& X, arma::mat& W);
RcppExport SEXP _Rdimtools_method_npe(SEXP XSEXP, SEXP WSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat& >::type X(XSEXP);
    Rcpp::traits::input_parameter< arma::mat& >::type W(WSEXP);
    rcpp_result_gen = Rcpp::wrap(method_npe(X, W));
    return rcpp_result_gen;
END_RCPP
}
// method_olpp
arma::mat method_olpp(arma::mat& X, arma::mat& S, const int ndim);
RcppExport SEXP _Rdimtools_method_olpp(SEXP XSEXP, SEXP SSEXP, SEXP ndimSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat& >::type X(XSEXP);
    Rcpp::traits::input_parameter< arma::mat& >::type S(SSEXP);
    Rcpp::traits::input_parameter< const int >::type ndim(ndimSEXP);
    rcpp_result_gen = Rcpp::wrap(method_olpp(X, S, ndim));
    return rcpp_result_gen;
END_RCPP
}
// method_bpca
Rcpp::List method_bpca(arma::mat& T, const double reltol, const int maxiter);
RcppExport SEXP _Rdimtools_method_bpca(SEXP TSEXP, SEXP reltolSEXP, SEXP maxiterSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat& >::type T(TSEXP);
    Rcpp::traits::input_parameter< const double >::type reltol(reltolSEXP);
    Rcpp::traits::input_parameter< const int >::type maxiter(maxiterSEXP);
    rcpp_result_gen = Rcpp::wrap(method_bpca(T, reltol, maxiter));
    return rcpp_result_gen;
END_RCPP
}
// method_trfextlpp
arma::mat method_trfextlpp(arma::mat& D, double a, double b);
RcppExport SEXP _Rdimtools_method_trfextlpp(SEXP DSEXP, SEXP aSEXP, SEXP bSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat& >::type D(DSEXP);
    Rcpp::traits::input_parameter< double >::type a(aSEXP);
    Rcpp::traits::input_parameter< double >::type b(bSEXP);
    rcpp_result_gen = Rcpp::wrap(method_trfextlpp(D, a, b));
    return rcpp_result_gen;
END_RCPP
}
// method_lspp_computeW
arma::mat method_lspp_computeW(arma::mat& S, arma::vec& svec);
RcppExport SEXP _Rdimtools_method_lspp_computeW(SEXP SSEXP, SEXP svecSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat& >::type S(SSEXP);
    Rcpp::traits::input_parameter< arma::vec& >::type svec(svecSEXP);
    rcpp_result_gen = Rcpp::wrap(method_lspp_computeW(S, svec));
    return rcpp_result_gen;
END_RCPP
}
// method_kmmcvec
arma::vec method_kmmcvec(arma::mat& X, arma::mat& partmat, double param);
RcppExport SEXP _Rdimtools_method_kmmcvec(SEXP XSEXP, SEXP partmatSEXP, SEXP paramSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat& >::type X(XSEXP);
    Rcpp::traits::input_parameter< arma::mat& >::type partmat(partmatSEXP);
    Rcpp::traits::input_parameter< double >::type param(paramSEXP);
    rcpp_result_gen = Rcpp::wrap(method_kmmcvec(X, partmat, param));
    return rcpp_result_gen;
END_RCPP
}
// method_lfda_maximaldistance
double method_lfda_maximaldistance(arma::rowvec& tvec, arma::mat& tmat);
RcppExport SEXP _Rdimtools_method_lfda_maximaldistance(SEXP tvecSEXP, SEXP tmatSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::rowvec& >::type tvec(tvecSEXP);
    Rcpp::traits::input_parameter< arma::mat& >::type tmat(tmatSEXP);
    rcpp_result_gen = Rcpp::wrap(method_lfda_maximaldistance(tvec, tmat));
    return rcpp_result_gen;
END_RCPP
}
// method_nnprojmax
arma::mat method_nnprojmax(arma::mat& C, arma::mat& Uinit, const double tol, const int maxiter);
RcppExport SEXP _Rdimtools_method_nnprojmax(SEXP CSEXP, SEXP UinitSEXP, SEXP tolSEXP, SEXP maxiterSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat& >::type C(CSEXP);
    Rcpp::traits::input_parameter< arma::mat& >::type Uinit(UinitSEXP);
    Rcpp::traits::input_parameter< const double >::type tol(tolSEXP);
    Rcpp::traits::input_parameter< const int >::type maxiter(maxiterSEXP);
    rcpp_result_gen = Rcpp::wrap(method_nnprojmax(C, Uinit, tol, maxiter));
    return rcpp_result_gen;
END_RCPP
}
// method_nnprojmin
arma::mat method_nnprojmin(arma::mat& C, arma::mat& Uinit, const double tol, const int maxiter);
RcppExport SEXP _Rdimtools_method_nnprojmin(SEXP CSEXP, SEXP UinitSEXP, SEXP tolSEXP, SEXP maxiterSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat& >::type C(CSEXP);
    Rcpp::traits::input_parameter< arma::mat& >::type Uinit(UinitSEXP);
    Rcpp::traits::input_parameter< const double >::type tol(tolSEXP);
    Rcpp::traits::input_parameter< const int >::type maxiter(maxiterSEXP);
    rcpp_result_gen = Rcpp::wrap(method_nnprojmin(C, Uinit, tol, maxiter));
    return rcpp_result_gen;
END_RCPP
}
// method_nnembedmin
arma::mat method_nnembedmin(arma::mat& M, arma::mat& Yinit, const double tol, const int maxiter);
RcppExport SEXP _Rdimtools_method_nnembedmin(SEXP MSEXP, SEXP YinitSEXP, SEXP tolSEXP, SEXP maxiterSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat& >::type M(MSEXP);
    Rcpp::traits::input_parameter< arma::mat& >::type Yinit(YinitSEXP);
    Rcpp::traits::input_parameter< const double >::type tol(tolSEXP);
    Rcpp::traits::input_parameter< const int >::type maxiter(maxiterSEXP);
    rcpp_result_gen = Rcpp::wrap(method_nnembedmin(M, Yinit, tol, maxiter));
    return rcpp_result_gen;
END_RCPP
}
// method_spufs
arma::vec method_spufs(arma::mat& X, arma::mat Ls, double alpha, double beta, double epsilon);
RcppExport SEXP _Rdimtools_method_spufs(SEXP XSEXP, SEXP LsSEXP, SEXP alphaSEXP, SEXP betaSEXP, SEXP epsilonSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat& >::type X(XSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type Ls(LsSEXP);
    Rcpp::traits::input_parameter< double >::type alpha(alphaSEXP);
    Rcpp::traits::input_parameter< double >::type beta(betaSEXP);
    Rcpp::traits::input_parameter< double >::type epsilon(epsilonSEXP);
    rcpp_result_gen = Rcpp::wrap(method_spufs(X, Ls, alpha, beta, epsilon));
    return rcpp_result_gen;
END_RCPP
}
// method_lspe
arma::vec method_lspe(arma::mat X, const int d, double alpha, double beta, arma::mat L);
RcppExport SEXP _Rdimtools_method_lspe(SEXP XSEXP, SEXP dSEXP, SEXP alphaSEXP, SEXP betaSEXP, SEXP LSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type X(XSEXP);
    Rcpp::traits::input_parameter< const int >::type d(dSEXP);
    Rcpp::traits::input_parameter< double >::type alpha(alphaSEXP);
    Rcpp::traits::input_parameter< double >::type beta(betaSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type L(LSEXP);
    rcpp_result_gen = Rcpp::wrap(method_lspe(X, d, alpha, beta, L));
    return rcpp_result_gen;
END_RCPP
}
// method_disr
arma::vec method_disr(arma::mat& D, double lbd1, double lbd2);
RcppExport SEXP _Rdimtools_method_disr(SEXP DSEXP, SEXP lbd1SEXP, SEXP lbd2SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat& >::type D(DSEXP);
    Rcpp::traits::input_parameter< double >::type lbd1(lbd1SEXP);
    Rcpp::traits::input_parameter< double >::type lbd2(lbd2SEXP);
    rcpp_result_gen = Rcpp::wrap(method_disr(D, lbd1, lbd2));
    return rcpp_result_gen;
END_RCPP
}
// method_rsr
arma::vec method_rsr(arma::mat X, double lbd, double verysmall);
RcppExport SEXP _Rdimtools_method_rsr(SEXP XSEXP, SEXP lbdSEXP, SEXP verysmallSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type X(XSEXP);
    Rcpp::traits::input_parameter< double >::type lbd(lbdSEXP);
    Rcpp::traits::input_parameter< double >::type verysmall(verysmallSEXP);
    rcpp_result_gen = Rcpp::wrap(method_rsr(X, lbd, verysmall));
    return rcpp_result_gen;
END_RCPP
}
// method_nrsr
arma::vec method_nrsr(arma::mat X, double lbd, double verysmall, double p);
RcppExport SEXP _Rdimtools_method_nrsr(SEXP XSEXP, SEXP lbdSEXP, SEXP verysmallSEXP, SEXP pSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type X(XSEXP);
    Rcpp::traits::input_parameter< double >::type lbd(lbdSEXP);
    Rcpp::traits::input_parameter< double >::type verysmall(verysmallSEXP);
    Rcpp::traits::input_parameter< double >::type p(pSEXP);
    rcpp_result_gen = Rcpp::wrap(method_nrsr(X, lbd, verysmall, p));
    return rcpp_result_gen;
END_RCPP
}
// method_scoresum
arma::vec method_scoresum(arma::mat& X, arma::mat& S);
RcppExport SEXP _Rdimtools_method_scoresum(SEXP XSEXP, SEXP SSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat& >::type X(XSEXP);
    Rcpp::traits::input_parameter< arma::mat& >::type S(SSEXP);
    rcpp_result_gen = Rcpp::wrap(method_scoresum(X, S));
    return rcpp_result_gen;
END_RCPP
}
// method_lsls
arma::mat method_lsls(arma::mat& X, arma::imat& nbd);
RcppExport SEXP _Rdimtools_method_lsls(SEXP XSEXP, SEXP nbdSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat& >::type X(XSEXP);
    Rcpp::traits::input_parameter< arma::imat& >::type nbd(nbdSEXP);
    rcpp_result_gen = Rcpp::wrap(method_lsls(X, nbd));
    return rcpp_result_gen;
END_RCPP
}
// method_sne
arma::mat method_sne(arma::mat& P, int ndim0, double eta0, int maxiter0, double jitter0, double decay0, double momentum0);
RcppExport SEXP _Rdimtools_method_sne(SEXP PSEXP, SEXP ndim0SEXP, SEXP eta0SEXP, SEXP maxiter0SEXP, SEXP jitter0SEXP, SEXP decay0SEXP, SEXP momentum0SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat& >::type P(PSEXP);
    Rcpp::traits::input_parameter< int >::type ndim0(ndim0SEXP);
    Rcpp::traits::input_parameter< double >::type eta0(eta0SEXP);
    Rcpp::traits::input_parameter< int >::type maxiter0(maxiter0SEXP);
    Rcpp::traits::input_parameter< double >::type jitter0(jitter0SEXP);
    Rcpp::traits::input_parameter< double >::type decay0(decay0SEXP);
    Rcpp::traits::input_parameter< double >::type momentum0(momentum0SEXP);
    rcpp_result_gen = Rcpp::wrap(method_sne(P, ndim0, eta0, maxiter0, jitter0, decay0, momentum0));
    return rcpp_result_gen;
END_RCPP
}
// method_snesym
arma::mat method_snesym(arma::mat& P, int ndim0, double eta0, int maxiter0, double jitter0, double decay0, double momentum0);
RcppExport SEXP _Rdimtools_method_snesym(SEXP PSEXP, SEXP ndim0SEXP, SEXP eta0SEXP, SEXP maxiter0SEXP, SEXP jitter0SEXP, SEXP decay0SEXP, SEXP momentum0SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat& >::type P(PSEXP);
    Rcpp::traits::input_parameter< int >::type ndim0(ndim0SEXP);
    Rcpp::traits::input_parameter< double >::type eta0(eta0SEXP);
    Rcpp::traits::input_parameter< int >::type maxiter0(maxiter0SEXP);
    Rcpp::traits::input_parameter< double >::type jitter0(jitter0SEXP);
    Rcpp::traits::input_parameter< double >::type decay0(decay0SEXP);
    Rcpp::traits::input_parameter< double >::type momentum0(momentum0SEXP);
    rcpp_result_gen = Rcpp::wrap(method_snesym(P, ndim0, eta0, maxiter0, jitter0, decay0, momentum0));
    return rcpp_result_gen;
END_RCPP
}
// method_tsne
arma::mat method_tsne(arma::mat& P, int ndim0, double eta0, int maxiter0, double jitter0, double decay0, double momentum0);
RcppExport SEXP _Rdimtools_method_tsne(SEXP PSEXP, SEXP ndim0SEXP, SEXP eta0SEXP, SEXP maxiter0SEXP, SEXP jitter0SEXP, SEXP decay0SEXP, SEXP momentum0SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat& >::type P(PSEXP);
    Rcpp::traits::input_parameter< int >::type ndim0(ndim0SEXP);
    Rcpp::traits::input_parameter< double >::type eta0(eta0SEXP);
    Rcpp::traits::input_parameter< int >::type maxiter0(maxiter0SEXP);
    Rcpp::traits::input_parameter< double >::type jitter0(jitter0SEXP);
    Rcpp::traits::input_parameter< double >::type decay0(decay0SEXP);
    Rcpp::traits::input_parameter< double >::type momentum0(momentum0SEXP);
    rcpp_result_gen = Rcpp::wrap(method_tsne(P, ndim0, eta0, maxiter0, jitter0, decay0, momentum0));
    return rcpp_result_gen;
END_RCPP
}
// method_eigenmaps
Rcpp::List method_eigenmaps(arma::mat& W);
RcppExport SEXP _Rdimtools_method_eigenmaps(SEXP WSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat& >::type W(WSEXP);
    rcpp_result_gen = Rcpp::wrap(method_eigenmaps(W));
    return rcpp_result_gen;
END_RCPP
}
// method_lleW
arma::vec method_lleW(arma::mat& mat_tgt, arma::vec& vec_tgt, const double regparam);
RcppExport SEXP _Rdimtools_method_lleW(SEXP mat_tgtSEXP, SEXP vec_tgtSEXP, SEXP regparamSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat& >::type mat_tgt(mat_tgtSEXP);
    Rcpp::traits::input_parameter< arma::vec& >::type vec_tgt(vec_tgtSEXP);
    Rcpp::traits::input_parameter< const double >::type regparam(regparamSEXP);
    rcpp_result_gen = Rcpp::wrap(method_lleW(mat_tgt, vec_tgt, regparam));
    return rcpp_result_gen;
END_RCPP
}
// method_lleWauto
Rcpp::List method_lleWauto(arma::mat& mat_tgt, arma::vec& vec_tgt);
RcppExport SEXP _Rdimtools_method_lleWauto(SEXP mat_tgtSEXP, SEXP vec_tgtSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat& >::type mat_tgt(mat_tgtSEXP);
    Rcpp::traits::input_parameter< arma::vec& >::type vec_tgt(vec_tgtSEXP);
    rcpp_result_gen = Rcpp::wrap(method_lleWauto(mat_tgt, vec_tgt));
    return rcpp_result_gen;
END_RCPP
}
// method_lleM
Rcpp::List method_lleM(arma::mat& W);
RcppExport SEXP _Rdimtools_method_lleM(SEXP WSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat& >::type W(WSEXP);
    rcpp_result_gen = Rcpp::wrap(method_lleM(W));
    return rcpp_result_gen;
END_RCPP
}
// method_ree
Rcpp::List method_ree(arma::mat& B, arma::mat& W, arma::mat& D, const double initc, const double abstol, const int maxiter);
RcppExport SEXP _Rdimtools_method_ree(SEXP BSEXP, SEXP WSEXP, SEXP DSEXP, SEXP initcSEXP, SEXP abstolSEXP, SEXP maxiterSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat& >::type B(BSEXP);
    Rcpp::traits::input_parameter< arma::mat& >::type W(WSEXP);
    Rcpp::traits::input_parameter< arma::mat& >::type D(DSEXP);
    Rcpp::traits::input_parameter< const double >::type initc(initcSEXP);
    Rcpp::traits::input_parameter< const double >::type abstol(abstolSEXP);
    Rcpp::traits::input_parameter< const int >::type maxiter(maxiterSEXP);
    rcpp_result_gen = Rcpp::wrap(method_ree(B, W, D, initc, abstol, maxiter));
    return rcpp_result_gen;
END_RCPP
}
// method_spe
arma::mat method_spe(arma::mat& R, arma::mat& iX, const int C, const int S, double lambda, double drate, arma::mat matselector);
RcppExport SEXP _Rdimtools_method_spe(SEXP RSEXP, SEXP iXSEXP, SEXP CSEXP, SEXP SSEXP, SEXP lambdaSEXP, SEXP drateSEXP, SEXP matselectorSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat& >::type R(RSEXP);
    Rcpp::traits::input_parameter< arma::mat& >::type iX(iXSEXP);
    Rcpp::traits::input_parameter< const int >::type C(CSEXP);
    Rcpp::traits::input_parameter< const int >::type S(SSEXP);
    Rcpp::traits::input_parameter< double >::type lambda(lambdaSEXP);
    Rcpp::traits::input_parameter< double >::type drate(drateSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type matselector(matselectorSEXP);
    rcpp_result_gen = Rcpp::wrap(method_spe(R, iX, C, S, lambda, drate, matselector));
    return rcpp_result_gen;
END_RCPP
}
// method_ispe
arma::mat method_ispe(arma::mat& R, arma::mat& iX, const int C, const int S, double lambda, double drate, arma::mat matselector, const double cutoff);
RcppExport SEXP _Rdimtools_method_ispe(SEXP RSEXP, SEXP iXSEXP, SEXP CSEXP, SEXP SSEXP, SEXP lambdaSEXP, SEXP drateSEXP, SEXP matselectorSEXP, SEXP cutoffSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat& >::type R(RSEXP);
    Rcpp::traits::input_parameter< arma::mat& >::type iX(iXSEXP);
    Rcpp::traits::input_parameter< const int >::type C(CSEXP);
    Rcpp::traits::input_parameter< const int >::type S(SSEXP);
    Rcpp::traits::input_parameter< double >::type lambda(lambdaSEXP);
    Rcpp::traits::input_parameter< double >::type drate(drateSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type matselector(matselectorSEXP);
    Rcpp::traits::input_parameter< const double >::type cutoff(cutoffSEXP);
    rcpp_result_gen = Rcpp::wrap(method_ispe(R, iX, C, S, lambda, drate, matselector, cutoff));
    return rcpp_result_gen;
END_RCPP
}
// method_crca
Rcpp::List method_crca(arma::mat& Xij, arma::mat& Yinit, double lambda, double alpha, const int maxiter, const double tolerance, arma::vec& vecselector);
RcppExport SEXP _Rdimtools_method_crca(SEXP XijSEXP, SEXP YinitSEXP, SEXP lambdaSEXP, SEXP alphaSEXP, SEXP maxiterSEXP, SEXP toleranceSEXP, SEXP vecselectorSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat& >::type Xij(XijSEXP);
    Rcpp::traits::input_parameter< arma::mat& >::type Yinit(YinitSEXP);
    Rcpp::traits::input_parameter< double >::type lambda(lambdaSEXP);
    Rcpp::traits::input_parameter< double >::type alpha(alphaSEXP);
    Rcpp::traits::input_parameter< const int >::type maxiter(maxiterSEXP);
    Rcpp::traits::input_parameter< const double >::type tolerance(toleranceSEXP);
    Rcpp::traits::input_parameter< arma::vec& >::type vecselector(vecselectorSEXP);
    rcpp_result_gen = Rcpp::wrap(method_crca(Xij, Yinit, lambda, alpha, maxiter, tolerance, vecselector));
    return rcpp_result_gen;
END_RCPP
}
// bmds_compute_SSR
double bmds_compute_SSR(arma::mat& D, arma::mat& Delta);
RcppExport SEXP _Rdimtools_bmds_compute_SSR(SEXP DSEXP, SEXP DeltaSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat& >::type D(DSEXP);
    Rcpp::traits::input_parameter< arma::mat& >::type Delta(DeltaSEXP);
    rcpp_result_gen = Rcpp::wrap(bmds_compute_SSR(D, Delta));
    return rcpp_result_gen;
END_RCPP
}
// main_bmds
Rcpp::List main_bmds(arma::mat D, arma::mat X0, double sigg0, double a, double alpha, int maxiter, double constant, bool verbose, arma::vec betas);
RcppExport SEXP _Rdimtools_main_bmds(SEXP DSEXP, SEXP X0SEXP, SEXP sigg0SEXP, SEXP aSEXP, SEXP alphaSEXP, SEXP maxiterSEXP, SEXP constantSEXP, SEXP verboseSEXP, SEXP betasSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type D(DSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type X0(X0SEXP);
    Rcpp::traits::input_parameter< double >::type sigg0(sigg0SEXP);
    Rcpp::traits::input_parameter< double >::type a(aSEXP);
    Rcpp::traits::input_parameter< double >::type alpha(alphaSEXP);
    Rcpp::traits::input_parameter< int >::type maxiter(maxiterSEXP);
    Rcpp::traits::input_parameter< double >::type constant(constantSEXP);
    Rcpp::traits::input_parameter< bool >::type verbose(verboseSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type betas(betasSEXP);
    rcpp_result_gen = Rcpp::wrap(main_bmds(D, X0, sigg0, a, alpha, maxiter, constant, verbose, betas));
    return rcpp_result_gen;
END_RCPP
}
// v2aux_pagerank
arma::vec v2aux_pagerank(arma::mat& A);
RcppExport SEXP _Rdimtools_v2aux_pagerank(SEXP ASEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat& >::type A(ASEXP);
    rcpp_result_gen = Rcpp::wrap(v2aux_pagerank(A));
    return rcpp_result_gen;
END_RCPP
}
// v2aux_pdist2
arma::mat v2aux_pdist2(arma::mat& X, arma::mat& Y);
RcppExport SEXP _Rdimtools_v2aux_pdist2(SEXP XSEXP, SEXP YSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat& >::type X(XSEXP);
    Rcpp::traits::input_parameter< arma::mat& >::type Y(YSEXP);
    rcpp_result_gen = Rcpp::wrap(v2aux_pdist2(X, Y));
    return rcpp_result_gen;
END_RCPP
}
// dt_cscore
Rcpp::List dt_cscore(arma::mat& X, int ndim, arma::uvec& label, std::string myscore, double mylbd);
RcppExport SEXP _Rdimtools_dt_cscore(SEXP XSEXP, SEXP ndimSEXP, SEXP labelSEXP, SEXP myscoreSEXP, SEXP mylbdSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat& >::type X(XSEXP);
    Rcpp::traits::input_parameter< int >::type ndim(ndimSEXP);
    Rcpp::traits::input_parameter< arma::uvec& >::type label(labelSEXP);
    Rcpp::traits::input_parameter< std::string >::type myscore(myscoreSEXP);
    Rcpp::traits::input_parameter< double >::type mylbd(mylbdSEXP);
    rcpp_result_gen = Rcpp::wrap(dt_cscore(X, ndim, label, myscore, mylbd));
    return rcpp_result_gen;
END_RCPP
}
// admm_lasso
arma::vec admm_lasso(arma::mat& A, arma::vec& b, double lambda);
RcppExport SEXP _Rdimtools_admm_lasso(SEXP ASEXP, SEXP bSEXP, SEXP lambdaSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat& >::type A(ASEXP);
    Rcpp::traits::input_parameter< arma::vec& >::type b(bSEXP);
    Rcpp::traits::input_parameter< double >::type lambda(lambdaSEXP);
    rcpp_result_gen = Rcpp::wrap(admm_lasso(A, b, lambda));
    return rcpp_result_gen;
END_RCPP
}
// dt_lasso
Rcpp::List dt_lasso(arma::mat& X, int ndim, arma::vec& y, double lambda);
RcppExport SEXP _Rdimtools_dt_lasso(SEXP XSEXP, SEXP ndimSEXP, SEXP ySEXP, SEXP lambdaSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat& >::type X(XSEXP);
    Rcpp::traits::input_parameter< int >::type ndim(ndimSEXP);
    Rcpp::traits::input_parameter< arma::vec& >::type y(ySEXP);
    Rcpp::traits::input_parameter< double >::type lambda(lambdaSEXP);
    rcpp_result_gen = Rcpp::wrap(dt_lasso(X, ndim, y, lambda));
    return rcpp_result_gen;
END_RCPP
}
// dt_enet
Rcpp::List dt_enet(arma::mat& X, int ndim, arma::vec& y, double lambda1, double lambda2);
RcppExport SEXP _Rdimtools_dt_enet(SEXP XSEXP, SEXP ndimSEXP, SEXP ySEXP, SEXP lambda1SEXP, SEXP lambda2SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat& >::type X(XSEXP);
    Rcpp::traits::input_parameter< int >::type ndim(ndimSEXP);
    Rcpp::traits::input_parameter< arma::vec& >::type y(ySEXP);
    Rcpp::traits::input_parameter< double >::type lambda1(lambda1SEXP);
    Rcpp::traits::input_parameter< double >::type lambda2(lambda2SEXP);
    rcpp_result_gen = Rcpp::wrap(dt_enet(X, ndim, y, lambda1, lambda2));
    return rcpp_result_gen;
END_RCPP
}
// cpp_fosmod_orthogonalize_vec
arma::mat cpp_fosmod_orthogonalize_vec(arma::vec& orthovec, arma::mat& others);
RcppExport SEXP _Rdimtools_cpp_fosmod_orthogonalize_vec(SEXP orthovecSEXP, SEXP othersSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::vec& >::type orthovec(orthovecSEXP);
    Rcpp::traits::input_parameter< arma::mat& >::type others(othersSEXP);
    rcpp_result_gen = Rcpp::wrap(cpp_fosmod_orthogonalize_vec(orthovec, others));
    return rcpp_result_gen;
END_RCPP
}
// cpp_fosmod_orthogonalize
arma::mat cpp_fosmod_orthogonalize(arma::mat& orthovecs, arma::mat& others);
RcppExport SEXP _Rdimtools_cpp_fosmod_orthogonalize(SEXP orthovecsSEXP, SEXP othersSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat& >::type orthovecs(orthovecsSEXP);
    Rcpp::traits::input_parameter< arma::mat& >::type others(othersSEXP);
    rcpp_result_gen = Rcpp::wrap(cpp_fosmod_orthogonalize(orthovecs, others));
    return rcpp_result_gen;
END_RCPP
}
// cpp_fosmod_crosscorr
arma::rowvec cpp_fosmod_crosscorr(arma::mat& data, arma::mat& ortho);
RcppExport SEXP _Rdimtools_cpp_fosmod_crosscorr(SEXP dataSEXP, SEXP orthoSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat& >::type data(dataSEXP);
    Rcpp::traits::input_parameter< arma::mat& >::type ortho(orthoSEXP);
    rcpp_result_gen = Rcpp::wrap(cpp_fosmod_crosscorr(data, ortho));
    return rcpp_result_gen;
END_RCPP
}
// dt_pca
Rcpp::List dt_pca(arma::mat& X, int ndim, bool cor);
RcppExport SEXP _Rdimtools_dt_pca(SEXP XSEXP, SEXP ndimSEXP, SEXP corSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat& >::type X(XSEXP);
    Rcpp::traits::input_parameter< int >::type ndim(ndimSEXP);
    Rcpp::traits::input_parameter< bool >::type cor(corSEXP);
    rcpp_result_gen = Rcpp::wrap(dt_pca(X, ndim, cor));
    return rcpp_result_gen;
END_RCPP
}
// dt_mds
Rcpp::List dt_mds(arma::mat& X, int ndim);
RcppExport SEXP _Rdimtools_dt_mds(SEXP XSEXP, SEXP ndimSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat& >::type X(XSEXP);
    Rcpp::traits::input_parameter< int >::type ndim(ndimSEXP);
    rcpp_result_gen = Rcpp::wrap(dt_mds(X, ndim));
    return rcpp_result_gen;
END_RCPP
}
// dt_fa
Rcpp::List dt_fa(arma::mat& X, int ndim, int maxiter, double tolerance);
RcppExport SEXP _Rdimtools_dt_fa(SEXP XSEXP, SEXP ndimSEXP, SEXP maxiterSEXP, SEXP toleranceSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat& >::type X(XSEXP);
    Rcpp::traits::input_parameter< int >::type ndim(ndimSEXP);
    Rcpp::traits::input_parameter< int >::type maxiter(maxiterSEXP);
    Rcpp::traits::input_parameter< double >::type tolerance(toleranceSEXP);
    rcpp_result_gen = Rcpp::wrap(dt_fa(X, ndim, maxiter, tolerance));
    return rcpp_result_gen;
END_RCPP
}
// dt_lmds
Rcpp::List dt_lmds(arma::mat& X, int ndim, int npts);
RcppExport SEXP _Rdimtools_dt_lmds(SEXP XSEXP, SEXP ndimSEXP, SEXP nptsSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat& >::type X(XSEXP);
    Rcpp::traits::input_parameter< int >::type ndim(ndimSEXP);
    Rcpp::traits::input_parameter< int >::type npts(nptsSEXP);
    rcpp_result_gen = Rcpp::wrap(dt_lmds(X, ndim, npts));
    return rcpp_result_gen;
END_RCPP
}
// dt_spca
Rcpp::List dt_spca(arma::mat& X, int ndim, double mu, double rho, const double abstol, const double reltol, const int maxiter);
RcppExport SEXP _Rdimtools_dt_spca(SEXP XSEXP, SEXP ndimSEXP, SEXP muSEXP, SEXP rhoSEXP, SEXP abstolSEXP, SEXP reltolSEXP, SEXP maxiterSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat& >::type X(XSEXP);
    Rcpp::traits::input_parameter< int >::type ndim(ndimSEXP);
    Rcpp::traits::input_parameter< double >::type mu(muSEXP);
    Rcpp::traits::input_parameter< double >::type rho(rhoSEXP);
    Rcpp::traits::input_parameter< const double >::type abstol(abstolSEXP);
    Rcpp::traits::input_parameter< const double >::type reltol(reltolSEXP);
    Rcpp::traits::input_parameter< const int >::type maxiter(maxiterSEXP);
    rcpp_result_gen = Rcpp::wrap(dt_spca(X, ndim, mu, rho, abstol, reltol, maxiter));
    return rcpp_result_gen;
END_RCPP
}
// dt_mmds
Rcpp::List dt_mmds(arma::mat& X, int ndim, int maxiter, double abstol);
RcppExport SEXP _Rdimtools_dt_mmds(SEXP XSEXP, SEXP ndimSEXP, SEXP maxiterSEXP, SEXP abstolSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat& >::type X(XSEXP);
    Rcpp::traits::input_parameter< int >::type ndim(ndimSEXP);
    Rcpp::traits::input_parameter< int >::type maxiter(maxiterSEXP);
    Rcpp::traits::input_parameter< double >::type abstol(abstolSEXP);
    rcpp_result_gen = Rcpp::wrap(dt_mmds(X, ndim, maxiter, abstol));
    return rcpp_result_gen;
END_RCPP
}
// dt_phate_partial
Rcpp::List dt_phate_partial(arma::mat& P, int ndim, std::string dtype, int maxiter, double abstol, bool smacof);
RcppExport SEXP _Rdimtools_dt_phate_partial(SEXP PSEXP, SEXP ndimSEXP, SEXP dtypeSEXP, SEXP maxiterSEXP, SEXP abstolSEXP, SEXP smacofSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat& >::type P(PSEXP);
    Rcpp::traits::input_parameter< int >::type ndim(ndimSEXP);
    Rcpp::traits::input_parameter< std::string >::type dtype(dtypeSEXP);
    Rcpp::traits::input_parameter< int >::type maxiter(maxiterSEXP);
    Rcpp::traits::input_parameter< double >::type abstol(abstolSEXP);
    Rcpp::traits::input_parameter< bool >::type smacof(smacofSEXP);
    rcpp_result_gen = Rcpp::wrap(dt_phate_partial(P, ndim, dtype, maxiter, abstol, smacof));
    return rcpp_result_gen;
END_RCPP
}
// dt_rpca
Rcpp::List dt_rpca(arma::mat& X, double mu, double lambda, int maxiter, double abstol);
RcppExport SEXP _Rdimtools_dt_rpca(SEXP XSEXP, SEXP muSEXP, SEXP lambdaSEXP, SEXP maxiterSEXP, SEXP abstolSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat& >::type X(XSEXP);
    Rcpp::traits::input_parameter< double >::type mu(muSEXP);
    Rcpp::traits::input_parameter< double >::type lambda(lambdaSEXP);
    Rcpp::traits::input_parameter< int >::type maxiter(maxiterSEXP);
    Rcpp::traits::input_parameter< double >::type abstol(abstolSEXP);
    rcpp_result_gen = Rcpp::wrap(dt_rpca(X, mu, lambda, maxiter, abstol));
    return rcpp_result_gen;
END_RCPP
}
// oos_linproj
arma::mat oos_linproj(arma::mat& Xold, arma::mat& Yold, arma::mat& Xnew);
RcppExport SEXP _Rdimtools_oos_linproj(SEXP XoldSEXP, SEXP YoldSEXP, SEXP XnewSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat& >::type Xold(XoldSEXP);
    Rcpp::traits::input_parameter< arma::mat& >::type Yold(YoldSEXP);
    Rcpp::traits::input_parameter< arma::mat& >::type Xnew(XnewSEXP);
    rcpp_result_gen = Rcpp::wrap(oos_linproj(Xold, Yold, Xnew));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_Rdimtools_aux_preprocess", (DL_FUNC) &_Rdimtools_aux_preprocess, 2},
    {"_Rdimtools_aux_perplexity", (DL_FUNC) &_Rdimtools_aux_perplexity, 2},
    {"_Rdimtools_aux_shortestpath", (DL_FUNC) &_Rdimtools_aux_shortestpath, 1},
    {"_Rdimtools_aux_landmarkMaxMin", (DL_FUNC) &_Rdimtools_aux_landmarkMaxMin, 3},
    {"_Rdimtools_aux_kernelcov", (DL_FUNC) &_Rdimtools_aux_kernelcov, 4},
    {"_Rdimtools_aux_eigendecomposition", (DL_FUNC) &_Rdimtools_aux_eigendecomposition, 1},
    {"_Rdimtools_aux_minmax", (DL_FUNC) &_Rdimtools_aux_minmax, 2},
    {"_Rdimtools_aux_regout", (DL_FUNC) &_Rdimtools_aux_regout, 2},
    {"_Rdimtools_aux_scatter", (DL_FUNC) &_Rdimtools_aux_scatter, 2},
    {"_Rdimtools_aux_scatter_pairwise", (DL_FUNC) &_Rdimtools_aux_scatter_pairwise, 1},
    {"_Rdimtools_aux_geigen", (DL_FUNC) &_Rdimtools_aux_geigen, 2},
    {"_Rdimtools_single_bicgstab", (DL_FUNC) &_Rdimtools_single_bicgstab, 6},
    {"_Rdimtools_single_bicgstab_sparse", (DL_FUNC) &_Rdimtools_single_bicgstab_sparse, 6},
    {"_Rdimtools_aux_expm", (DL_FUNC) &_Rdimtools_aux_expm, 1},
    {"_Rdimtools_aux_rank", (DL_FUNC) &_Rdimtools_aux_rank, 1},
    {"_Rdimtools_methods_boxcount", (DL_FUNC) &_Rdimtools_methods_boxcount, 3},
    {"_Rdimtools_aux_numderiv", (DL_FUNC) &_Rdimtools_aux_numderiv, 2},
    {"_Rdimtools_handy_plus", (DL_FUNC) &_Rdimtools_handy_plus, 1},
    {"_Rdimtools_handy_hadamardABC", (DL_FUNC) &_Rdimtools_handy_hadamardABC, 3},
    {"_Rdimtools_handy_hadamardABCsqrt", (DL_FUNC) &_Rdimtools_handy_hadamardABCsqrt, 3},
    {"_Rdimtools_method_pca", (DL_FUNC) &_Rdimtools_method_pca, 1},
    {"_Rdimtools_method_mds", (DL_FUNC) &_Rdimtools_method_mds, 1},
    {"_Rdimtools_method_mdsD", (DL_FUNC) &_Rdimtools_method_mdsD, 1},
    {"_Rdimtools_method_ica", (DL_FUNC) &_Rdimtools_method_ica, 7},
    {"_Rdimtools_method_rpgauss", (DL_FUNC) &_Rdimtools_method_rpgauss, 2},
    {"_Rdimtools_method_fa", (DL_FUNC) &_Rdimtools_method_fa, 4},
    {"_Rdimtools_method_npe", (DL_FUNC) &_Rdimtools_method_npe, 2},
    {"_Rdimtools_method_olpp", (DL_FUNC) &_Rdimtools_method_olpp, 3},
    {"_Rdimtools_method_bpca", (DL_FUNC) &_Rdimtools_method_bpca, 3},
    {"_Rdimtools_method_trfextlpp", (DL_FUNC) &_Rdimtools_method_trfextlpp, 3},
    {"_Rdimtools_method_lspp_computeW", (DL_FUNC) &_Rdimtools_method_lspp_computeW, 2},
    {"_Rdimtools_method_kmmcvec", (DL_FUNC) &_Rdimtools_method_kmmcvec, 3},
    {"_Rdimtools_method_lfda_maximaldistance", (DL_FUNC) &_Rdimtools_method_lfda_maximaldistance, 2},
    {"_Rdimtools_method_nnprojmax", (DL_FUNC) &_Rdimtools_method_nnprojmax, 4},
    {"_Rdimtools_method_nnprojmin", (DL_FUNC) &_Rdimtools_method_nnprojmin, 4},
    {"_Rdimtools_method_nnembedmin", (DL_FUNC) &_Rdimtools_method_nnembedmin, 4},
    {"_Rdimtools_method_spufs", (DL_FUNC) &_Rdimtools_method_spufs, 5},
    {"_Rdimtools_method_lspe", (DL_FUNC) &_Rdimtools_method_lspe, 5},
    {"_Rdimtools_method_disr", (DL_FUNC) &_Rdimtools_method_disr, 3},
    {"_Rdimtools_method_rsr", (DL_FUNC) &_Rdimtools_method_rsr, 3},
    {"_Rdimtools_method_nrsr", (DL_FUNC) &_Rdimtools_method_nrsr, 4},
    {"_Rdimtools_method_scoresum", (DL_FUNC) &_Rdimtools_method_scoresum, 2},
    {"_Rdimtools_method_lsls", (DL_FUNC) &_Rdimtools_method_lsls, 2},
    {"_Rdimtools_method_sne", (DL_FUNC) &_Rdimtools_method_sne, 7},
    {"_Rdimtools_method_snesym", (DL_FUNC) &_Rdimtools_method_snesym, 7},
    {"_Rdimtools_method_tsne", (DL_FUNC) &_Rdimtools_method_tsne, 7},
    {"_Rdimtools_method_eigenmaps", (DL_FUNC) &_Rdimtools_method_eigenmaps, 1},
    {"_Rdimtools_method_lleW", (DL_FUNC) &_Rdimtools_method_lleW, 3},
    {"_Rdimtools_method_lleWauto", (DL_FUNC) &_Rdimtools_method_lleWauto, 2},
    {"_Rdimtools_method_lleM", (DL_FUNC) &_Rdimtools_method_lleM, 1},
    {"_Rdimtools_method_ree", (DL_FUNC) &_Rdimtools_method_ree, 6},
    {"_Rdimtools_method_spe", (DL_FUNC) &_Rdimtools_method_spe, 7},
    {"_Rdimtools_method_ispe", (DL_FUNC) &_Rdimtools_method_ispe, 8},
    {"_Rdimtools_method_crca", (DL_FUNC) &_Rdimtools_method_crca, 7},
    {"_Rdimtools_bmds_compute_SSR", (DL_FUNC) &_Rdimtools_bmds_compute_SSR, 2},
    {"_Rdimtools_main_bmds", (DL_FUNC) &_Rdimtools_main_bmds, 9},
    {"_Rdimtools_v2aux_pagerank", (DL_FUNC) &_Rdimtools_v2aux_pagerank, 1},
    {"_Rdimtools_v2aux_pdist2", (DL_FUNC) &_Rdimtools_v2aux_pdist2, 2},
    {"_Rdimtools_dt_cscore", (DL_FUNC) &_Rdimtools_dt_cscore, 5},
    {"_Rdimtools_admm_lasso", (DL_FUNC) &_Rdimtools_admm_lasso, 3},
    {"_Rdimtools_dt_lasso", (DL_FUNC) &_Rdimtools_dt_lasso, 4},
    {"_Rdimtools_dt_enet", (DL_FUNC) &_Rdimtools_dt_enet, 5},
    {"_Rdimtools_cpp_fosmod_orthogonalize_vec", (DL_FUNC) &_Rdimtools_cpp_fosmod_orthogonalize_vec, 2},
    {"_Rdimtools_cpp_fosmod_orthogonalize", (DL_FUNC) &_Rdimtools_cpp_fosmod_orthogonalize, 2},
    {"_Rdimtools_cpp_fosmod_crosscorr", (DL_FUNC) &_Rdimtools_cpp_fosmod_crosscorr, 2},
    {"_Rdimtools_dt_pca", (DL_FUNC) &_Rdimtools_dt_pca, 3},
    {"_Rdimtools_dt_mds", (DL_FUNC) &_Rdimtools_dt_mds, 2},
    {"_Rdimtools_dt_fa", (DL_FUNC) &_Rdimtools_dt_fa, 4},
    {"_Rdimtools_dt_lmds", (DL_FUNC) &_Rdimtools_dt_lmds, 3},
    {"_Rdimtools_dt_spca", (DL_FUNC) &_Rdimtools_dt_spca, 7},
    {"_Rdimtools_dt_mmds", (DL_FUNC) &_Rdimtools_dt_mmds, 4},
    {"_Rdimtools_dt_phate_partial", (DL_FUNC) &_Rdimtools_dt_phate_partial, 6},
    {"_Rdimtools_dt_rpca", (DL_FUNC) &_Rdimtools_dt_rpca, 5},
    {"_Rdimtools_oos_linproj", (DL_FUNC) &_Rdimtools_oos_linproj, 3},
    {NULL, NULL, 0}
};

RcppExport void R_init_Rdimtools(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
